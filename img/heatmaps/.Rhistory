treatment <- treat_raw / treat_wt
return(treatment)
}
eqn_8_2(c(0,0,0,1,0), c(0,0,0,1,0))
6/.2
1/.2
eqn_8_2 <- function(treat_vec, control_vec){
treat_raw <- treat_out[treat_vec == 1]
treat_wt <- treat_prob[treat_vec == 1]
treatment <- (treat_raw / treat_wt) / (1 / treat_wt)
control_raw <- control_out[control_vec == 1]
control_wt <- control_prob[control_vec == 1]
control <- sum((control_raw / control_wt)) / sum((1 / control_wt))
return(control)
}
eqn_8_2(c(0,0,0,1,0), c(0,0,0,1,0))
sum(0.6/0.4 + 6/0.8)
sum(1/0.6 + 1/0.4 + 1/0.8)
9/5.4166
6- 1.66155
eqn_8_2 <- function(treat_vec, control_vec){
treat_raw <- treat_out[treat_vec == 1]
treat_wt <- treat_prob[treat_vec == 1]
treatment <- (treat_raw / treat_wt) / (1 / treat_wt)
control_raw <- control_out[control_vec == 1]
control_wt <- control_prob[control_vec == 1]
control <- sum((control_raw / control_wt))
#/ sum((1 / control_wt))
return(control)
}
eqn_8_2(c(0,0,0,1,0), c(0,0,0,1,0))
6/.4
6/.8
eqn_8_2(c(0,0,0,1,0), c(1,1,0,0,1))
eqn_8_2 <- function(treat_vec, control_vec){
treat_raw <- treat_out[treat_vec == 1]
treat_wt <- treat_prob[treat_vec == 1]
treatment <- (treat_raw / treat_wt) / (1 / treat_wt)
control_raw <- control_out[control_vec == 1]
control_wt <- control_prob[control_vec == 1]
control <- sum((control_raw / control_wt)) / sum((1 / control_wt))
return(treatment - control)
}
eqn_8_2(c(0,0,0,1,0), c(1,1,0,0,1))
eqn_8_3 <- function(spill_vec, control_vec){
spill_raw <- spill_out[spill_vec == 1]
spill_wt <- spill_prob[spill_vec == 1]
spillover <- sum((spill_raw / spill_wt)) / sum((1 / spill_wt))
control_raw <- control_out[control_vec == 1]
control_wt <- control_prob[control_vec == 1]
control <- sum((control_raw / control_wt)) / sum((1 / control_wt))
return(spillover - control)
}
eqn_8_3(c(0,0,1,0,0), c(1,1,0,0,1))
eqn_8_3 <- function(spill_vec, control_vec){
spill_raw <- spill_out[spill_vec == 1]
spill_wt <- spill_prob[spill_vec == 1]
spillover <- sum((spill_raw / spill_wt)) / sum((1 / spill_wt))
control_raw <- control_out[control_vec == 1]
control_wt <- control_prob[control_vec == 1]
control <- sum((control_raw / control_wt)) / sum((1 / control_wt))
return(spillover - control)
}
eqn_8_3(c(0,0,1,0,0), c(1,1,0,0,0))
eqn_8_3(c(0,1,0,0,0), c(0,0,1,1,0))
eqn_8_2(c(1,0,0,0,0),c(0,0,1,1,1))
eqn_8_2(c(1,0,0,0,0),c(0,0,1,1,0))
library(ggplot2)
df <- data.frame(c('Student', 'Travel','Basic'), c(32.44,24.29,25.48))
df
colnames(df) <- c('Group', 'SatisfactionScore')
df
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_bar()
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_bar(stat='bin')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_bar(stat='identity')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point()
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 2, color = 'blue')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
scale_y_continuous(seq(1,40))
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
scale_y_continuous(limits=(1,40))
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
scale_y_continuous(limits=c(1,40))
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
scale_y_continuous(limits=c(1,40)) +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 6, color = 'blue') +
hline(y=27.4)+
scale_y_continuous(limits=c(1,40)) +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 6, color = 'blue') +
geom_hline(aes(yintercept=27.4))+
scale_y_continuous(limits=c(1,40)) +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 5, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 2, linetype = 'dash')+
scale_y_continuous(limits=c(1,40)) +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 2, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL, x = 5, y = 30, label = "Overall Satisfaction Score") +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL, y = 30, label = "Overall Satisfaction Score") +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=0, y = 30, label = "Overall Satisfaction Score") +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=2, y = 30, label = "Overall Satisfaction Score") +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 35, xend = 1, yend = 30), arrow = arrow(length = unit(0.5, "cm")))+
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
library(grid)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 35, xend = 1, yend = 30), arrow = arrow(length = unit(0.5, "cm")))+
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.title.x = element_text(size = rel(1.8)))
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.title.x = element_text(size = rel(3)))
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.title.x = element_text(size = rel(3)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.x = element_text(size = rel(3)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(3)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(2)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment',size = rel(1.5))
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment',size = 14)
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.5)),
axis.title = element_text(size = rel(1.5)),
title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.25)),
title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Average Satisfaction Score") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.25)),
title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
df <- data.frame(c('Student (n=300)', 'Travel (n=300)','Basic (n=300)'), c(32.44,24.29,25.48))
colnames(df) <- c('Group', 'SatisfactionScore')
gg <- ggplot(aes(x = Group, y = SatisfactionScore), data = df) +
geom_point(size = 4, color = 'blue') +
geom_hline(aes(yintercept=27.4), size = 1, linetype = 'dashed')+
scale_y_continuous(limits=c(1,40)) +
geom_text(data = NULL,x=1, y = 35, label = "Overall Survey Average") +
geom_segment(aes(x=1, y = 34, xend = 1, yend = 29), arrow = arrow(length = unit(0.25, "cm")))+
xlab('') +
theme(axis.text = element_text(size = rel(1.25)),
axis.title = element_text(size = rel(1.25)),
title = element_text(size = rel(1.5)))+
ggtitle('Satisfaction Score by Segment')
print(gg)
plotHeatmap <- function(pop, firstPerson, lastPerson){
heat <- ggplot(mutation.m, aes(variable, ID)) +
geom_tile(aes(fill = colorScale[value+3])) +
scale_fill_identity(labels=letters[1:5], breaks=colorScale) +
labs(x = "Mutation", y = "People") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(text=element_text(size=12, family="sans"),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.border = element_rect(fill='transparent', colour = "black")) +
annotate("rect", ymin=firstPerson, ymax=lastPerson, xmin=-Inf, xmax=Inf,alpha=0.5, fill="gray")
ggsave(heat, file=paste(outputDir, pop, ".png", sep="/"), width=5, height=3, units="in", dpi=300)
}
for (pop in popSubset)
{
temp <- mutation[mutation$population == pop,]
#plotHeatmap(pop, temp$Mut[1], temp$Mut[length(temp$Mut)])
print(pop)
print(temp$Mut[1])
print(temp$Mut[length(temp$Mut)])
}
library(ggplot2)
library(reshape2)
mutation <- read.csv('/Users/nathanielblack/Dropbox/MIDS/VIZ/ghpages/Genomics/data/clusteredMutationMatrix.csv', header = T)
cols <- colnames(mutation)
popSubset <- c('GBR','FIN','CHS','PUR','CDX','CLM','IBS','PEL','PJL','KHV','GWD','ESN','BEB','MSL','ACB')
mutation <- mutation[mutation$population %in% popSubset,]
#Create an ID variable (Mut column isn't sequential)
mutation['ID'] <- seq(1,1466)
mutation <- mutation[,-1]
mutation <- mutation[,c(111,1:110)]
#Grab mutation columns
cols <- cols[-c(1,2)]
#Make the dataset long
mutation.m <- melt(mutation, id.vars = c('ID','population'))
#Define colors for heatmap
colorScale <- c("firebrick", "red", "white", "blue", "blueviolet")
#Main Heat Map
mainPlot <- ggplot(mutation.m, aes(variable, ID)) +
geom_tile(aes(fill = colorScale[value+3])) +
scale_fill_identity(breaks=colorScale) +
labs(x = "Mutation", y = "People") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(axis.title=element_text(size=12, family="sans"),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.border = element_rect(fill='transparent', colour = "black"))
print(mainPlot)
ggsave("/Users/nathanielblack/Dropbox/MIDS/VIZ/ghpages/Genomics/img/heatmaps/BASE.png", width=5, height=3, units="in", dpi=300)
plotHeatmap <- function(pop, firstPerson, lastPerson){
heat <- ggplot(mutation.m, aes(variable, ID)) +
geom_tile(aes(fill = colorScale[value+3])) +
scale_fill_identity(labels=letters[1:5], breaks=colorScale) +
labs(x = "Mutation", y = "People") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(text=element_text(size=12, family="sans"),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.border = element_rect(fill='transparent', colour = "black")) +
annotate("rect", ymin=firstPerson, ymax=lastPerson, xmin=-Inf, xmax=Inf,alpha=0.5, fill="gray")
ggsave(heat, file=paste(outputDir, pop, ".png", sep="/"), width=5, height=3, units="in", dpi=300)
}
#Make a plot for each population and save it as an image
#Finds the first and last person for each population to create the highlight bar
outputDir <- "/Users/nathanielblack/Dropbox/MIDS/VIZ/ghpages/Genomics/img/heatmaps/"
for (pop in popSubset)
{
temp <- mutation[mutation$population == pop,]
#plotHeatmap(pop, temp$Mut[1], temp$Mut[length(temp$Mut)])
print(pop)
print(temp$Mut[1])
print(temp$Mut[length(temp$Mut)])
}
for (pop in popSubset)
{
temp <- mutation[mutation$population == pop,]
plotHeatmap(pop, temp$ID[1], temp$ID[length(temp$ID)])
#print(pop)
#print(temp$Mut[1])
#print(temp$Mut[length(temp$Mut)])
}
plotHeatmap <- function(pop, firstPerson, lastPerson, outputDir){
heat <- ggplot(mutation.m, aes(variable, ID)) +
geom_tile(aes(fill = colorScale[value+3])) +
scale_fill_identity(labels=letters[1:5], breaks=colorScale) +
labs(x = "Mutation", y = "People") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(text=element_text(size=12, family="sans"),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.border = element_rect(fill='transparent', colour = "black")) +
annotate("rect", ymin=firstPerson, ymax=lastPerson, xmin=-Inf, xmax=Inf,alpha=0.5, fill="gray")
ggsave(heat, file=paste(outputDir, pop, ".png", sep="/"), width=5, height=3, units="in", dpi=300)
}
#Make a plot for each population and save it as an image
#Finds the first and last person for each population to create the highlight bar
for (pop in popSubset)
{
temp <- mutation[mutation$population == pop,]
plotHeatmap(pop,
temp$ID[1],
temp$ID[length(temp$ID)],
outputDir <- "/Users/nathanielblack/Dropbox/MIDS/VIZ/ghpages/Genomics/img/heatmaps/")
#print(pop)
#print(temp$Mut[1])
#print(temp$Mut[length(temp$Mut)])
}
setwd("/Users/nathanielblack/Dropbox/MIDS/VIZ/ghpages/Genomics/img/heatmaps/")
plotHeatmap <- function(pop, firstPerson, lastPerson){
heat <- ggplot(mutation.m, aes(variable, ID)) +
geom_tile(aes(fill = colorScale[value+3])) +
scale_fill_identity(labels=letters[1:5], breaks=colorScale) +
labs(x = "Mutation", y = "People") +
scale_x_discrete(expand = c(0, 0)) +
scale_y_discrete(expand = c(0, 0)) +
theme(text=element_text(size=12, family="sans"),
axis.ticks.x=element_blank(),
axis.ticks.y=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
panel.border = element_rect(fill='transparent', colour = "black")) +
annotate("rect", ymin=firstPerson, ymax=lastPerson, xmin=-Inf, xmax=Inf,alpha=0.5, fill="gray")
ggsave(heat, file=paste(pop, ".png", sep=""), width=5, height=3, units="in", dpi=300)
}
#Make a plot for each population and save it as an image
#Finds the first and last person for each population to create the highlight bar
for (pop in popSubset)
{
temp <- mutation[mutation$population == pop,]
plotHeatmap(pop,
temp$ID[1],
temp$ID[length(temp$ID)])
#print(pop)
#print(temp$Mut[1])
#print(temp$Mut[length(temp$Mut)])
}
